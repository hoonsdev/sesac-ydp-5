.container {
  width: 300px;
  height: 400px;
  background-color: #333;
  /* 좌우 방향으로 가운데 배치, 가로 세로 기준으로 너비 길이 설정되어야 설정 가능 */
  margin: 0 auto;
  
  /* 부모 요소에 "flex"를 선언하면, 아이템(자식)이 가로 방향으로 배치 */
  display: flex;
  flex-wrap: wrap;

  /* 
    flexbox 기본 용어
    - 주축 (main axis): 아이템의 배치 방향
    - 교차축 (cross axis): 주축의 수직축
  */

  /* flex-direction: flex 방향을 설정 (주축 방향 설정)
    - row(default): 수평 정렬 (좌 -> 우)
    - row-reverse: 수평 정렬 (우 -> 좌)
    - column: 수직 정렬 (상 -> 하)
    - column-reverse: 수직 정렬(하 -> 상)
  */

  /* justify-content: 주축 아이템을 어떻게 배치할 것인지?
    - flex-direction이 수평 정렬 ... 주축 = row(가로)
    - flex-direction이 수직 정렬 ... 주축 = column(세로)

    - flex-start (default): 아이템을 주축에 대해서 start지점을 기준으로 나열 
    - flex-end: 아이템을 주축에 대해서 end 지점을 기준으로 나열
    - space-between: 처음과 마지막 아이템을 양 끝에 붙이고, 나머지 영역 공평하게 나눔
    - space-around: 아이템들의 모든 여백을 공평하게 갖도록 함 (양끝 영역의 단위가 1이라면, 나머지 영역의 단위는 2)
    - space-evenly: start부터 첫 아이템의 간격, 아이템 끼리의 간격, 마지막 아이템 부터 end 까지의 모든 간격이 일정
  */

  /* align-items: 교차축에 대해서 아이템을 어떻게 배치할 것인지?
    - flex-direction이 수평 정렬 ... 교차축 = column(세로)
    - flex-direction이 수직 정렬 ... 교차축 = row(가로)

    - stretch (default): container의 교차축을 채우기 위해 늘림
      - 현재 .flex-items 에 width, height 값이 있어 늘어나지는 않음
    - flex-start: 교차축에 대하여 시작점으로 정렬
    - flex-end: 교차축에 대하여 끝점으로 정렬
    - center: 교차축에 대하여 가운데 정렬
    - baseline: 아이템을 텍스트의 베이스라인을 기준 정렬
  */

  /* flex-wrap: 줄바꿈(개행) 처리
    -> 컨테이너(부모)가 한 줄에 아이템을 다 수용하지 못할 때, 줄바꿈 관련 설정
    - nowrap(default): 줄바꿈 안함
    - wrap: 줄바꿈 함
    - wrap-reverse: 줄바꿈 하는데 아이템을 역순 배치
  */

  /* align-content: 여러 행에 대한 정렬
    (조건) flex-wrap: wrap 상태에서 아이템이 두 줄 이상일 때 수직축 방향 설정
    기본적으로 1행 2행의 자리가 절반 기준으로 정해져 있음
  */
  /* align-content: stretch; */
  /* align-content: flex-start; */
  /* align-content: flex-end; */
  /* align-content: center; */
  /* align-content: space-between; */
  /* align-content: space-around; */
  /* align-content: space-evenly; */
}

.items {
  width: 100px;
  height: 100px;
  font-size: 20px;
  text-align: center;
  /* 글자를 세로 가운데로 오게 하고싶을 때 lh와 height를 동일하게 해주면 가운데로 설정 가능 */
  line-height: 100px;
}

.item1 {
  background-color: red;
}

.item2 {
  background-color: orange;
}

.item3 {
  background-color: yellow;
}

.item4 {
  background-color: green;
}

.item5 {
  background-color: blue;
}

/* div 안에 div 가운데로 정렬 */
.outer {
  width: 300px;
  height: 300px;
  background-color: aquamarine;
}

.outer1 {
  position: relative;
}

.inner1 {
  position: absolute;
  /* 부모 요소의 크기의 절반만큼 이동 */
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  /* 자식 요소 크기의 50% */
}

.inner {
  width: 100px;
  height: 100px;
  background-color: blue;
}

.outer2 {
  display: flex;
  justify-content: center;
  align-items: center;
}